{"version":3,"file":"index.mjs","sources":["../src/webpack-bundle-analysis/findFileFormat.ts","../src/webpack-bundle-analysis/webpackBundleAnalysisPlugin.ts","../src/index.ts"],"sourcesContent":["const STRIP_CHARS_REGEX = /(\\w|\\[|]|\\/)/g;\n\ninterface FindFilenameFormatArgs {\n  assetName: string;\n  filename: string;\n  assetModuleFilename: string;\n  chunkFilename: string;\n  cssFilename: string;\n  cssChunkFilename: string;\n}\n\nexport const findFilenameFormat = ({\n  assetName,\n  filename,\n  assetModuleFilename,\n  chunkFilename,\n  cssFilename,\n  cssChunkFilename,\n}: FindFilenameFormatArgs) => {\n  const currAssetFormat = assetName.replaceAll(STRIP_CHARS_REGEX, \"\");\n\n  if (\n    filename !== \"\" &&\n    currAssetFormat.includes(filename.replaceAll(STRIP_CHARS_REGEX, \"\"))\n  ) {\n    return filename;\n  }\n\n  if (\n    chunkFilename !== \"\" &&\n    currAssetFormat.includes(chunkFilename.replaceAll(STRIP_CHARS_REGEX, \"\"))\n  ) {\n    return chunkFilename;\n  }\n\n  if (\n    cssFilename !== \"\" &&\n    currAssetFormat.includes(cssFilename.replaceAll(STRIP_CHARS_REGEX, \"\"))\n  ) {\n    return cssFilename;\n  }\n\n  if (\n    cssChunkFilename !== \"\" &&\n    currAssetFormat.includes(cssChunkFilename.replaceAll(STRIP_CHARS_REGEX, \"\"))\n  ) {\n    return cssChunkFilename;\n  }\n\n  if (\n    assetModuleFilename !== \"\" &&\n    currAssetFormat.includes(\n      assetModuleFilename.replaceAll(STRIP_CHARS_REGEX, \"\"),\n    )\n  ) {\n    return assetModuleFilename;\n  }\n\n  return \"\";\n};\n","import path from \"node:path\";\nimport {\n  red,\n  normalizePath,\n  type BundleAnalysisUploadPlugin,\n  type Asset,\n  getCompressedSize,\n} from \"@codecov/bundler-plugin-core\";\nimport * as webpack from \"webpack\";\n\nimport { findFilenameFormat } from \"./findFileFormat\";\n\n// @ts-expect-error this value is being replaced by rollup\nconst PLUGIN_NAME = __PACKAGE_NAME__ as string;\n// @ts-expect-error this value is being replaced by rollup\nconst PLUGIN_VERSION = __PACKAGE_VERSION__ as string;\n\nexport const webpackBundleAnalysisPlugin: BundleAnalysisUploadPlugin = ({\n  output,\n}) => ({\n  version: output.version,\n  name: PLUGIN_NAME,\n  pluginVersion: PLUGIN_VERSION,\n  buildStart: () => {\n    output.start();\n    output.setPlugin(PLUGIN_NAME, PLUGIN_VERSION);\n  },\n  buildEnd: () => {\n    output.end();\n  },\n  writeBundle: async () => {\n    await output.write();\n  },\n  webpack(compiler) {\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation) => {\n      compilation.hooks.processAssets.tapPromise(\n        {\n          name: PLUGIN_NAME,\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_REPORT,\n        },\n        async () => {\n          // TODO - remove this once we hard fail on not having a bundle name\n          // don't need to do anything if the bundle name is not present or empty\n          if (!output.bundleName || output.bundleName === \"\") {\n            red(\"Bundle name is not present or empty. Skipping upload.\");\n            return;\n          }\n\n          output.setBundleName(output.bundleName);\n          // Webpack base chunk format options: https://webpack.js.org/configuration/output/#outputchunkformat\n          if (typeof compilation.outputOptions.chunkFormat === \"string\") {\n            if (compilation.name && compilation.name !== \"\") {\n              output.setBundleName(`${output.bundleName}-${compilation.name}`);\n            }\n\n            let chunkFormat = compilation.outputOptions.chunkFormat;\n            if (chunkFormat === \"commonjs\") {\n              chunkFormat = \"cjs\";\n            } else if (chunkFormat === \"module\") {\n              chunkFormat = \"esm\";\n            }\n\n            output.setBundleName(`${output.bundleName}-${chunkFormat}`);\n          }\n\n          const compilationStats = compilation.getStats().toJson({\n            assets: true,\n            chunks: true,\n            modules: true,\n            builtAt: true,\n            hash: true,\n          });\n\n          output.bundler = {\n            name: \"webpack\",\n            version: webpack.version,\n          };\n\n          const outputOptions = compilation.outputOptions;\n          const { assets, chunks, modules } = compilationStats;\n\n          const collectedAssets: Asset[] = [];\n          if (assets) {\n            const filename =\n              typeof outputOptions.filename === \"string\"\n                ? outputOptions.filename\n                : \"\";\n            const assetModuleFilename =\n              typeof outputOptions.assetModuleFilename === \"string\"\n                ? outputOptions.assetModuleFilename\n                : \"\";\n            const chunkFilename =\n              typeof outputOptions.chunkFilename === \"string\"\n                ? outputOptions.chunkFilename\n                : \"\";\n            const cssFilename =\n              typeof outputOptions.cssFilename === \"string\"\n                ? outputOptions.cssFilename\n                : \"\";\n            const cssChunkFilename =\n              typeof outputOptions.chunkFilename === \"string\"\n                ? outputOptions.chunkFilename\n                : \"\";\n\n            await Promise.all(\n              assets.map(async (asset) => {\n                const format = findFilenameFormat({\n                  assetName: asset.name,\n                  filename,\n                  assetModuleFilename,\n                  chunkFilename,\n                  cssFilename,\n                  cssChunkFilename,\n                });\n\n                if (path.extname(asset.name) === \".map\") {\n                  return;\n                }\n\n                const currentAsset = compilation.getAsset(asset.name);\n\n                let compressedSize = null;\n                if (currentAsset) {\n                  compressedSize = await getCompressedSize({\n                    fileName: asset.name,\n                    code: currentAsset.source.source(),\n                  });\n                }\n\n                collectedAssets.push({\n                  name: asset.name,\n                  size: asset.size,\n                  gzipSize: compressedSize,\n                  normalized: normalizePath(asset.name, format),\n                });\n\n                return;\n              }),\n            );\n\n            output.assets = collectedAssets;\n          }\n\n          const chunkIdMap = new Map<number | string, string>();\n\n          if (chunks) {\n            let idCounter = 0;\n            output.chunks = chunks.map((chunk) => {\n              const chunkId = chunk.id ?? \"\";\n              const uniqueId = `${idCounter}-${chunkId}`;\n              chunkIdMap.set(chunkId, uniqueId);\n              idCounter += 1;\n\n              return {\n                id: chunk.id?.toString() ?? \"\",\n                uniqueId: uniqueId,\n                entry: chunk.entry,\n                initial: chunk.initial,\n                files: chunk.files ?? [],\n                names: chunk.names ?? [],\n              };\n            });\n          }\n\n          if (modules) {\n            output.modules = modules.map((module) => {\n              const chunks = module.chunks ?? [];\n              const chunkUniqueIds: string[] = [];\n\n              chunks.forEach((chunk) => {\n                const chunkUniqueId = chunkIdMap.get(chunk);\n\n                if (chunkUniqueId) {\n                  chunkUniqueIds.push(chunkUniqueId);\n                }\n              });\n\n              return {\n                name: module.name ?? \"\",\n                size: module.size ?? 0,\n                chunkUniqueIds: chunkUniqueIds,\n              };\n            });\n          }\n\n          output.duration = Date.now() - (output.builtAt ?? 0);\n          output.outputPath = outputOptions.path ?? \"\";\n\n          // only output file if running dry run\n          if (output.dryRun) {\n            const { RawSource } = webpack.sources;\n            compilation.emitAsset(\n              `${output.bundleName}-stats.json`,\n              new RawSource(output.bundleStatsToJson()),\n            );\n          }\n        },\n      );\n    });\n  },\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  type UnpluginOptions,\n  createWebpackPlugin,\n  type WebpackPluginInstance,\n} from \"unplugin\";\nimport {\n  normalizeOptions,\n  type Options,\n  checkNodeVersion,\n  Output,\n  handleErrors,\n} from \"@codecov/bundler-plugin-core\";\n\nimport { webpackBundleAnalysisPlugin } from \"./webpack-bundle-analysis/webpackBundleAnalysisPlugin\";\n\nconst codecovWebpackPluginFactory = createWebpackPlugin<Options, true>(\n  (userOptions, unpluginMetaContext) => {\n    if (checkNodeVersion(unpluginMetaContext)) {\n      return [];\n    }\n\n    const normalizedOptions = normalizeOptions(userOptions);\n    if (!normalizedOptions.success) {\n      const { shouldExit } = handleErrors(normalizedOptions);\n\n      if (shouldExit) {\n        process.exit(1);\n      }\n      return [];\n    }\n\n    const plugins: UnpluginOptions[] = [];\n    const output = new Output(normalizedOptions.options);\n    const options = normalizedOptions.options;\n    if (options.enableBundleAnalysis) {\n      plugins.push(\n        webpackBundleAnalysisPlugin({\n          output,\n        }),\n      );\n    }\n\n    return plugins;\n  },\n);\n\n/**\n * Details for the Codecov Webpack plugin.\n *\n * @example\n * ```typescript\n * // webpack.config.js\n * const path = require(\"path\");\n * const { codecovWebpackPlugin } = require(\"@codecov/webpack-plugin\");\n *\n * module.exports = {\n *   entry: \"./src/index.js\",\n *   mode: \"production\",\n *   output: {\n *     filename: \"main.js\",\n *     path: path.resolve(__dirname, \"dist\"),\n *   },\n *   plugins: [\n *     // Put the Codecov vite plugin after all other plugins\n *     codecovWebpackPlugin({\n *       enableBundleAnalysis: true,\n *       bundleName: \"example-webpack-bundle\",\n *       uploadToken: process.env.CODECOV_TOKEN,\n *     }),\n *    ],\n * };\n * ```\n *\n * @see {@link @codecov/bundler-plugin-core!Options | Options} for list of options.\n */\nexport const codecovWebpackPlugin: (options: Options) => WebpackPluginInstance =\n  codecovWebpackPluginFactory;\n\n/**\n * Do not use this plugin directly. For internal use only.\n *\n * Used to expose the webpack bundle analysis unplugin plugin that can be combined with other\n * plugins to create a single plugin for a given meta-framework.\n *\n * @internal\n */\nexport const _internal_webpackBundleAnalysisPlugin =\n  webpackBundleAnalysisPlugin;\n"],"names":["STRIP_CHARS_REGEX","findFilenameFormat","assetName","filename","assetModuleFilename","chunkFilename","cssFilename","cssChunkFilename","currAssetFormat","PLUGIN_NAME","PLUGIN_VERSION","webpackBundleAnalysisPlugin","output","compiler","compilation","webpack","red","chunkFormat","compilationStats","outputOptions","assets","chunks","modules","collectedAssets","asset","format","path","currentAsset","compressedSize","getCompressedSize","normalizePath","chunkIdMap","idCounter","chunk","chunkId","uniqueId","module","chunkUniqueIds","chunkUniqueId","RawSource","codecovWebpackPluginFactory","createWebpackPlugin","userOptions","unpluginMetaContext","checkNodeVersion","normalizedOptions","normalizeOptions","shouldExit","handleErrors","plugins","Output","codecovWebpackPlugin","_internal_webpackBundleAnalysisPlugin"],"mappings":"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"}